{
    "sourceFile": "tests/controllers/auth.controller.test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1746012885356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746012957719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n describe(\"Auth Controller\", () => {\r\n   describe(\"POST /api/auth/login\", () => {\r\n     it(\"should login successfully with correct credentials\", async () => {\r\n       const userData = generateUserData();\r\n-      \r\n+\r\n       // 先创建用户\r\n       await request(app)\r\n         .post(\"/api/users\")\r\n         .set(\"Content-Type\", \"application/json\")\r\n@@ -18,9 +18,9 @@\n         .post(\"/api/auth/login\")\r\n         .set(\"Content-Type\", \"application/json\")\r\n         .send({\r\n           username: userData.username,\r\n-          password: userData.password\r\n+          password: userData.password,\r\n         });\r\n \r\n       expect(response.status).toBe(200);\r\n       expect(response.body.code).toBe(1);\r\n@@ -29,9 +29,9 @@\n     });\r\n \r\n     it(\"should return 401 with incorrect password\", async () => {\r\n       const userData = generateUserData();\r\n-      \r\n+\r\n       // 先创建用户\r\n       await request(app)\r\n         .post(\"/api/users\")\r\n         .set(\"Content-Type\", \"application/json\")\r\n@@ -42,9 +42,9 @@\n         .post(\"/api/auth/login\")\r\n         .set(\"Content-Type\", \"application/json\")\r\n         .send({\r\n           username: userData.username,\r\n-          password: \"wrongpassword\"\r\n+          password: \"wrongpassword\",\r\n         });\r\n \r\n       expect(response.status).toBe(401);\r\n       expect(response.body.code).toBe(0);\r\n@@ -56,13 +56,13 @@\n         .post(\"/api/auth/login\")\r\n         .set(\"Content-Type\", \"application/json\")\r\n         .send({\r\n           username: \"nonexistentuser\",\r\n-          password: \"password123\"\r\n+          password: \"password123\",\r\n         });\r\n \r\n       expect(response.status).toBe(401);\r\n       expect(response.body.code).toBe(0);\r\n       expect(response.body.msg).toBe(\"用户名或密码不正确\");\r\n     });\r\n   });\r\n\\ No newline at end of file\n-}); \n+});\r\n"
                },
                {
                    "date": 1746012988453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,5 +64,5 @@\n       expect(response.body.code).toBe(0);\r\n       expect(response.body.msg).toBe(\"用户名或密码不正确\");\r\n     });\r\n   });\r\n-});\n\\ No newline at end of file\n+});\r\n"
                }
            ],
            "date": 1746012885356,
            "name": "Commit-0",
            "content": "const request = require(\"supertest\");\r\nconst app = require(\"../../app\");\r\nconst { generateUserData } = require(\"../helpers\");\r\n\r\ndescribe(\"Auth Controller\", () => {\r\n  describe(\"POST /api/auth/login\", () => {\r\n    it(\"should login successfully with correct credentials\", async () => {\r\n      const userData = generateUserData();\r\n      \r\n      // 先创建用户\r\n      await request(app)\r\n        .post(\"/api/users\")\r\n        .set(\"Content-Type\", \"application/json\")\r\n        .send(userData);\r\n\r\n      // 测试登录\r\n      const response = await request(app)\r\n        .post(\"/api/auth/login\")\r\n        .set(\"Content-Type\", \"application/json\")\r\n        .send({\r\n          username: userData.username,\r\n          password: userData.password\r\n        });\r\n\r\n      expect(response.status).toBe(200);\r\n      expect(response.body.code).toBe(1);\r\n      expect(response.body.data).toHaveProperty(\"token\");\r\n      expect(response.body.data).toHaveProperty(\"refreshToken\");\r\n    });\r\n\r\n    it(\"should return 401 with incorrect password\", async () => {\r\n      const userData = generateUserData();\r\n      \r\n      // 先创建用户\r\n      await request(app)\r\n        .post(\"/api/users\")\r\n        .set(\"Content-Type\", \"application/json\")\r\n        .send(userData);\r\n\r\n      // 使用错误密码登录\r\n      const response = await request(app)\r\n        .post(\"/api/auth/login\")\r\n        .set(\"Content-Type\", \"application/json\")\r\n        .send({\r\n          username: userData.username,\r\n          password: \"wrongpassword\"\r\n        });\r\n\r\n      expect(response.status).toBe(401);\r\n      expect(response.body.code).toBe(0);\r\n      expect(response.body.msg).toBe(\"用户名或密码不正确\");\r\n    });\r\n\r\n    it(\"should return 401 with non-existent username\", async () => {\r\n      const response = await request(app)\r\n        .post(\"/api/auth/login\")\r\n        .set(\"Content-Type\", \"application/json\")\r\n        .send({\r\n          username: \"nonexistentuser\",\r\n          password: \"password123\"\r\n        });\r\n\r\n      expect(response.status).toBe(401);\r\n      expect(response.body.code).toBe(0);\r\n      expect(response.body.msg).toBe(\"用户名或密码不正确\");\r\n    });\r\n  });\r\n}); "
        }
    ]
}