{
    "sourceFile": "middlewares/rbac.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1745881514569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745881537072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,14 +2,19 @@\n \r\n module.exports = (requiredPermission) => {\r\n   return async (req, res, next) => {\r\n     try {\r\n-      const hasPermission = await rbacService.checkPermission(req.user.id, requiredPermission);\r\n-      \r\n+      const hasPermission = await rbacService.checkPermission(\r\n+        req.user.id,\r\n+        requiredPermission\r\n+      );\r\n+\r\n       if (!hasPermission) {\r\n-        return res.status(403).json({ message: \"Forbidden: Insufficient permissions\" });\r\n+        return res\r\n+          .status(403)\r\n+          .json({ message: \"Forbidden: Insufficient permissions\" });\r\n       }\r\n-      \r\n+\r\n       next();\r\n     } catch (error) {\r\n       console.error(\"RBAC Error:\", error);\r\n       res.status(500).json({ message: \"Internal server error\" });\r\n"
                },
                {
                    "date": 1745926243082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,49 @@\n-const rbacService = require(\"../services/rbac.service\");\r\n+const { User, Role, Permission } = require('../models');\r\n \r\n-module.exports = (requiredPermission) => {\r\n+const checkPermission = (requiredPermission) => {\r\n   return async (req, res, next) => {\r\n     try {\r\n-      const hasPermission = await rbacService.checkPermission(\r\n-        req.user.id,\r\n-        requiredPermission\r\n+      const user = await User.findByPk(req.userId, {\r\n+        include: [{\r\n+          model: Role,\r\n+          include: [Permission]\r\n+        }]\r\n+      });\r\n+\r\n+      if (!user) {\r\n+        return res.status(403).json({\r\n+          code: 403,\r\n+          message: \"User not found\",\r\n+          data: null\r\n+        });\r\n+      }\r\n+\r\n+      const hasPermission = user.Roles.some(role => \r\n+        role.Permissions.some(permission => permission.name === requiredPermission)\r\n       );\r\n \r\n       if (!hasPermission) {\r\n-        return res\r\n-          .status(403)\r\n-          .json({ message: \"Forbidden: Insufficient permissions\" });\r\n+        return res.status(403).json({\r\n+          code: 403,\r\n+          message: \"Permission denied\",\r\n+          data: null\r\n+        });\r\n       }\r\n \r\n       next();\r\n     } catch (error) {\r\n-      console.error(\"RBAC Error:\", error);\r\n-      res.status(500).json({ message: \"Internal server error\" });\r\n+      console.error('Error checking permission:', error);\r\n+      res.status(500).json({\r\n+        code: 500,\r\n+        message: \"Internal server error\",\r\n+        data: null\r\n+      });\r\n     }\r\n   };\r\n };\r\n+\r\n+const rbac = {\r\n+  checkPermission\r\n+};\r\n+\r\n+module.exports = rbac;\r\n"
                },
                {
                    "date": 1745926358300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,53 @@\n-const { User, Role, Permission } = require('../models');\r\n+const { User, Role, Permission } = require(\"../models\");\r\n \r\n const checkPermission = (requiredPermission) => {\r\n   return async (req, res, next) => {\r\n     try {\r\n       const user = await User.findByPk(req.userId, {\r\n-        include: [{\r\n-          model: Role,\r\n-          include: [Permission]\r\n-        }]\r\n+        include: [\r\n+          {\r\n+            model: Role,\r\n+            include: [Permission],\r\n+          },\r\n+        ],\r\n       });\r\n \r\n       if (!user) {\r\n         return res.status(403).json({\r\n           code: 403,\r\n           message: \"User not found\",\r\n-          data: null\r\n+          data: null,\r\n         });\r\n       }\r\n \r\n-      const hasPermission = user.Roles.some(role => \r\n-        role.Permissions.some(permission => permission.name === requiredPermission)\r\n+      const hasPermission = user.Roles.some((role) =>\r\n+        role.Permissions.some(\r\n+          (permission) => permission.name === requiredPermission\r\n+        )\r\n       );\r\n \r\n       if (!hasPermission) {\r\n         return res.status(403).json({\r\n           code: 403,\r\n           message: \"Permission denied\",\r\n-          data: null\r\n+          data: null,\r\n         });\r\n       }\r\n \r\n       next();\r\n     } catch (error) {\r\n-      console.error('Error checking permission:', error);\r\n+      console.error(\"Error checking permission:\", error);\r\n       res.status(500).json({\r\n         code: 500,\r\n         message: \"Internal server error\",\r\n-        data: null\r\n+        data: null,\r\n       });\r\n     }\r\n   };\r\n };\r\n \r\n const rbac = {\r\n-  checkPermission\r\n+  checkPermission,\r\n };\r\n \r\n module.exports = rbac;\r\n"
                }
            ],
            "date": 1745881514569,
            "name": "Commit-0",
            "content": "const rbacService = require(\"../services/rbac.service\");\r\n\r\nmodule.exports = (requiredPermission) => {\r\n  return async (req, res, next) => {\r\n    try {\r\n      const hasPermission = await rbacService.checkPermission(req.user.id, requiredPermission);\r\n      \r\n      if (!hasPermission) {\r\n        return res.status(403).json({ message: \"Forbidden: Insufficient permissions\" });\r\n      }\r\n      \r\n      next();\r\n    } catch (error) {\r\n      console.error(\"RBAC Error:\", error);\r\n      res.status(500).json({ message: \"Internal server error\" });\r\n    }\r\n  };\r\n};\r\n"
        }
    ]
}