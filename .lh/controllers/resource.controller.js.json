{
    "sourceFile": "controllers/resource.controller.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746022442084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746024865528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,5 +59,5 @@\n     }\r\n   },\r\n };\r\n \r\n-module.exports = resourceController; \n\\ No newline at end of file\n+module.exports = resourceController;\r\n"
                }
            ],
            "date": 1746022442084,
            "name": "Commit-0",
            "content": "const { Resource } = require(\"../models\");\r\nconst ResponseUtil = require(\"../utils/response\");\r\n\r\nconst resourceController = {\r\n  // 创建资源\r\n  async create(req, res) {\r\n    try {\r\n      const resource = await Resource.create(req.body);\r\n      res.json(ResponseUtil.success(resource, \"资源创建成功\"));\r\n    } catch (error) {\r\n      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n    }\r\n  },\r\n  // 获取资源列表\r\n  async list(req, res) {\r\n    try {\r\n      const resources = await Resource.findAll();\r\n      res.json(ResponseUtil.success(resources, \"资源列表获取成功\"));\r\n    } catch (error) {\r\n      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n    }\r\n  },\r\n  // 获取单个资源\r\n  async getById(req, res) {\r\n    try {\r\n      const resource = await Resource.findByPk(req.params.id);\r\n      if (!resource) {\r\n        return res.status(404).json(ResponseUtil.error(\"资源不存在\", 404));\r\n      }\r\n      res.json(ResponseUtil.success(resource, \"资源获取成功\"));\r\n    } catch (error) {\r\n      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n    }\r\n  },\r\n  // 更新资源\r\n  async update(req, res) {\r\n    try {\r\n      const resource = await Resource.findByPk(req.params.id);\r\n      if (!resource) {\r\n        return res.status(404).json(ResponseUtil.error(\"资源不存在\", 404));\r\n      }\r\n      await resource.update(req.body);\r\n      res.json(ResponseUtil.success(resource, \"资源更新成功\"));\r\n    } catch (error) {\r\n      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n    }\r\n  },\r\n  // 删除资源\r\n  async delete(req, res) {\r\n    try {\r\n      const resource = await Resource.findByPk(req.params.id);\r\n      if (!resource) {\r\n        return res.status(404).json(ResponseUtil.error(\"资源不存在\", 404));\r\n      }\r\n      await resource.destroy();\r\n      res.json(ResponseUtil.success(null, \"资源删除成功\"));\r\n    } catch (error) {\r\n      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n    }\r\n  },\r\n};\r\n\r\nmodule.exports = resourceController; "
        }
    ]
}