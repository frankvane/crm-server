{
    "sourceFile": "controllers/categoryType.controller.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1745926065976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1745926065976,
            "name": "Commit-0",
            "content": "const { CategoryType } = require('../models');\r\nconst { Op } = require('sequelize');\r\n\r\n// 创建分类类型\r\nexports.create = async (req, res) => {\r\n  try {\r\n    const { name, code, description, status } = req.body;\r\n\r\n    // 检查code是否已存在\r\n    const existing = await CategoryType.findOne({ where: { code } });\r\n    if (existing) {\r\n      return res.status(400).json({\r\n        code: 400,\r\n        message: 'Category type code already exists',\r\n        data: null\r\n      });\r\n    }\r\n\r\n    const categoryType = await CategoryType.create({\r\n      name,\r\n      code,\r\n      description,\r\n      status: status !== undefined ? status : true\r\n    });\r\n\r\n    res.json({\r\n      code: 200,\r\n      message: 'Category type created successfully',\r\n      data: categoryType\r\n    });\r\n  } catch (error) {\r\n    console.error('Error creating category type:', error);\r\n    res.status(500).json({\r\n      code: 500,\r\n      message: 'Internal server error',\r\n      data: null\r\n    });\r\n  }\r\n};\r\n\r\n// 获取分类类型列表\r\nexports.findAll = async (req, res) => {\r\n  try {\r\n    const { page = 1, pageSize = 10, status } = req.query;\r\n    const offset = (page - 1) * pageSize;\r\n    const where = {};\r\n\r\n    if (status !== undefined) {\r\n      where.status = status === 'true';\r\n    }\r\n\r\n    const { count, rows } = await CategoryType.findAndCountAll({\r\n      where,\r\n      offset,\r\n      limit: parseInt(pageSize),\r\n      order: [['createdAt', 'DESC']]\r\n    });\r\n\r\n    res.json({\r\n      code: 200,\r\n      message: 'Success',\r\n      data: {\r\n        total: count,\r\n        items: rows,\r\n        currentPage: parseInt(page),\r\n        pageSize: parseInt(pageSize),\r\n        totalPages: Math.ceil(count / pageSize)\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Error getting category types:', error);\r\n    res.status(500).json({\r\n      code: 500,\r\n      message: 'Internal server error',\r\n      data: null\r\n    });\r\n  }\r\n};\r\n\r\n// 获取单个分类类型\r\nexports.findOne = async (req, res) => {\r\n  try {\r\n    const categoryType = await CategoryType.findByPk(req.params.id);\r\n    if (!categoryType) {\r\n      return res.status(404).json({\r\n        code: 404,\r\n        message: 'Category type not found',\r\n        data: null\r\n      });\r\n    }\r\n\r\n    res.json({\r\n      code: 200,\r\n      message: 'Success',\r\n      data: categoryType\r\n    });\r\n  } catch (error) {\r\n    console.error('Error getting category type:', error);\r\n    res.status(500).json({\r\n      code: 500,\r\n      message: 'Internal server error',\r\n      data: null\r\n    });\r\n  }\r\n};\r\n\r\n// 更新分类类型\r\nexports.update = async (req, res) => {\r\n  try {\r\n    const { name, code, description, status } = req.body;\r\n    const categoryType = await CategoryType.findByPk(req.params.id);\r\n\r\n    if (!categoryType) {\r\n      return res.status(404).json({\r\n        code: 404,\r\n        message: 'Category type not found',\r\n        data: null\r\n      });\r\n    }\r\n\r\n    // 如果要更改code，检查新code是否已存在\r\n    if (code && code !== categoryType.code) {\r\n      const existing = await CategoryType.findOne({\r\n        where: {\r\n          code,\r\n          id: { [Op.ne]: req.params.id }\r\n        }\r\n      });\r\n      if (existing) {\r\n        return res.status(400).json({\r\n          code: 400,\r\n          message: 'Category type code already exists',\r\n          data: null\r\n        });\r\n      }\r\n    }\r\n\r\n    await categoryType.update({\r\n      name: name || categoryType.name,\r\n      code: code || categoryType.code,\r\n      description: description !== undefined ? description : categoryType.description,\r\n      status: status !== undefined ? status : categoryType.status\r\n    });\r\n\r\n    res.json({\r\n      code: 200,\r\n      message: 'Category type updated successfully',\r\n      data: categoryType\r\n    });\r\n  } catch (error) {\r\n    console.error('Error updating category type:', error);\r\n    res.status(500).json({\r\n      code: 500,\r\n      message: 'Internal server error',\r\n      data: null\r\n    });\r\n  }\r\n};\r\n\r\n// 删除分类类型\r\nexports.delete = async (req, res) => {\r\n  try {\r\n    const categoryType = await CategoryType.findByPk(req.params.id);\r\n    if (!categoryType) {\r\n      return res.status(404).json({\r\n        code: 404,\r\n        message: 'Category type not found',\r\n        data: null\r\n      });\r\n    }\r\n\r\n    // TODO: 检查是否有关联的分类，如果有则不允许删除\r\n    const categories = await categoryType.getCategories();\r\n    if (categories.length > 0) {\r\n      return res.status(400).json({\r\n        code: 400,\r\n        message: 'Cannot delete category type with associated categories',\r\n        data: null\r\n      });\r\n    }\r\n\r\n    await categoryType.destroy();\r\n    res.json({\r\n      code: 200,\r\n      message: 'Category type deleted successfully',\r\n      data: null\r\n    });\r\n  } catch (error) {\r\n    console.error('Error deleting category type:', error);\r\n    res.status(500).json({\r\n      code: 500,\r\n      message: 'Internal server error',\r\n      data: null\r\n    });\r\n  }\r\n};"
        }
    ]
}