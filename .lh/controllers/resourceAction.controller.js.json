{
    "sourceFile": "controllers/resourceAction.controller.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1746022460215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746024865533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,5 +59,5 @@\n     }\r\n   },\r\n };\r\n \r\n-module.exports = resourceActionController;\n\\ No newline at end of file\n+module.exports = resourceActionController;\r\n"
                },
                {
                    "date": 1746057117630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,63 +1,237 @@\n-const { ResourceAction } = require(\"../models\");\r\n+const { ResourceAction, Resource, Permission } = require(\"../models\");\r\n const ResponseUtil = require(\"../utils/response\");\r\n \r\n const resourceActionController = {\r\n   // 创建资源操作\r\n   async create(req, res) {\r\n     try {\r\n-      const action = await ResourceAction.create(req.body);\r\n-      res.json(ResponseUtil.success(action, \"资源操作创建成功\"));\r\n+      const { resourceId, ...actionData } = req.body;\r\n+\r\n+      // 检查资源是否存在\r\n+      const resource = await Resource.findByPk(resourceId);\r\n+      if (!resource) {\r\n+        return res.status(404).json({\r\n+          success: false,\r\n+          message: \"Resource not found\"\r\n+        });\r\n+      }\r\n+\r\n+      // 检查同一资源下是否已存在相同代码的操作\r\n+      const existingAction = await ResourceAction.findOne({\r\n+        where: {\r\n+          resourceId,\r\n+          code: actionData.code\r\n+        }\r\n+      });\r\n+\r\n+      if (existingAction) {\r\n+        return res.status(400).json({\r\n+          success: false,\r\n+          message: \"Action code already exists for this resource\"\r\n+        });\r\n+      }\r\n+\r\n+      // 创建操作\r\n+      const action = await ResourceAction.create({\r\n+        ...actionData,\r\n+        resourceId\r\n+      });\r\n+\r\n+      // 自动创建对应的权限\r\n+      const permission = await Permission.create({\r\n+        name: `${action.code}_${resource.code}`,\r\n+        code: `${action.code}_${resource.code}`,\r\n+        description: action.description,\r\n+        actionId: action.id,\r\n+        resourceId\r\n+      });\r\n+\r\n+      res.status(201).json({\r\n+        success: true,\r\n+        data: {\r\n+          ...action.toJSON(),\r\n+          permission: permission.toJSON()\r\n+        }\r\n+      });\r\n     } catch (error) {\r\n-      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n+      res.status(400).json({\r\n+        success: false,\r\n+        message: error.message\r\n+      });\r\n     }\r\n   },\r\n+\r\n   // 获取资源操作列表\r\n   async list(req, res) {\r\n     try {\r\n-      const actions = await ResourceAction.findAll();\r\n-      res.json(ResponseUtil.success(actions, \"资源操作列表获取成功\"));\r\n+      const { resourceId } = req.query;\r\n+      const where = resourceId ? { resourceId } : {};\r\n+\r\n+      const actions = await ResourceAction.findAll({\r\n+        where,\r\n+        include: [\r\n+          {\r\n+            model: Resource,\r\n+            as: 'resource',\r\n+            attributes: ['id', 'name', 'code']\r\n+          },\r\n+          {\r\n+            model: Permission,\r\n+            as: 'permission',\r\n+            attributes: ['id', 'name', 'code']\r\n+          }\r\n+        ],\r\n+        order: [['sort', 'ASC']]\r\n+      });\r\n+\r\n+      res.json({\r\n+        success: true,\r\n+        data: actions\r\n+      });\r\n     } catch (error) {\r\n-      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n+      res.status(400).json({\r\n+        success: false,\r\n+        message: error.message\r\n+      });\r\n     }\r\n   },\r\n+\r\n   // 获取单个资源操作\r\n   async getById(req, res) {\r\n     try {\r\n-      const action = await ResourceAction.findByPk(req.params.id);\r\n+      const action = await ResourceAction.findByPk(req.params.id, {\r\n+        include: [\r\n+          {\r\n+            model: Resource,\r\n+            as: 'resource',\r\n+            attributes: ['id', 'name', 'code']\r\n+          },\r\n+          {\r\n+            model: Permission,\r\n+            as: 'permission',\r\n+            attributes: ['id', 'name', 'code']\r\n+          }\r\n+        ]\r\n+      });\r\n+\r\n       if (!action) {\r\n-        return res.status(404).json(ResponseUtil.error(\"资源操作不存在\", 404));\r\n+        return res.status(404).json({\r\n+          success: false,\r\n+          message: \"Resource action not found\"\r\n+        });\r\n       }\r\n-      res.json(ResponseUtil.success(action, \"资源操作获取成功\"));\r\n+\r\n+      res.json({\r\n+        success: true,\r\n+        data: action\r\n+      });\r\n     } catch (error) {\r\n-      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n+      res.status(400).json({\r\n+        success: false,\r\n+        message: error.message\r\n+      });\r\n     }\r\n   },\r\n+\r\n   // 更新资源操作\r\n   async update(req, res) {\r\n     try {\r\n-      const action = await ResourceAction.findByPk(req.params.id);\r\n+      const { id } = req.params;\r\n+      const { resourceId, ...updateData } = req.body;\r\n+\r\n+      const action = await ResourceAction.findByPk(id, {\r\n+        include: [\r\n+          {\r\n+            model: Permission,\r\n+            as: 'permission'\r\n+          }\r\n+        ]\r\n+      });\r\n+\r\n       if (!action) {\r\n-        return res.status(404).json(ResponseUtil.error(\"资源操作不存在\", 404));\r\n+        return res.status(404).json({\r\n+          success: false,\r\n+          message: \"Resource action not found\"\r\n+        });\r\n       }\r\n-      await action.update(req.body);\r\n-      res.json(ResponseUtil.success(action, \"资源操作更新成功\"));\r\n+\r\n+      // 如果更改了代码，需要检查是否重复\r\n+      if (updateData.code && updateData.code !== action.code) {\r\n+        const existingAction = await ResourceAction.findOne({\r\n+          where: {\r\n+            resourceId: action.resourceId,\r\n+            code: updateData.code\r\n+          }\r\n+        });\r\n+\r\n+        if (existingAction) {\r\n+          return res.status(400).json({\r\n+            success: false,\r\n+            message: \"Action code already exists for this resource\"\r\n+          });\r\n+        }\r\n+\r\n+        // 更新对应的权限代码\r\n+        if (action.permission) {\r\n+          const resource = await Resource.findByPk(action.resourceId);\r\n+          await action.permission.update({\r\n+            name: `${updateData.code}_${resource.code}`,\r\n+            code: `${updateData.code}_${resource.code}`\r\n+          });\r\n+        }\r\n+      }\r\n+\r\n+      await action.update(updateData);\r\n+\r\n+      res.json({\r\n+        success: true,\r\n+        data: action\r\n+      });\r\n     } catch (error) {\r\n-      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n+      res.status(400).json({\r\n+        success: false,\r\n+        message: error.message\r\n+      });\r\n     }\r\n   },\r\n+\r\n   // 删除资源操作\r\n   async delete(req, res) {\r\n     try {\r\n-      const action = await ResourceAction.findByPk(req.params.id);\r\n+      const action = await ResourceAction.findByPk(req.params.id, {\r\n+        include: [\r\n+          {\r\n+            model: Permission,\r\n+            as: 'permission'\r\n+          }\r\n+        ]\r\n+      });\r\n+\r\n       if (!action) {\r\n-        return res.status(404).json(ResponseUtil.error(\"资源操作不存在\", 404));\r\n+        return res.status(404).json({\r\n+          success: false,\r\n+          message: \"Resource action not found\"\r\n+        });\r\n       }\r\n+\r\n+      // 删除关联的权限\r\n+      if (action.permission) {\r\n+        await action.permission.destroy();\r\n+      }\r\n+\r\n       await action.destroy();\r\n-      res.json(ResponseUtil.success(null, \"资源操作删除成功\"));\r\n+\r\n+      res.json({\r\n+        success: true,\r\n+        message: \"Resource action deleted successfully\"\r\n+      });\r\n     } catch (error) {\r\n-      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n+      res.status(400).json({\r\n+        success: false,\r\n+        message: error.message\r\n+      });\r\n     }\r\n-  },\r\n+  }\r\n };\r\n \r\n module.exports = resourceActionController;\r\n"
                },
                {
                    "date": 1746057304353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,53 +11,53 @@\n       const resource = await Resource.findByPk(resourceId);\r\n       if (!resource) {\r\n         return res.status(404).json({\r\n           success: false,\r\n-          message: \"Resource not found\"\r\n+          message: \"Resource not found\",\r\n         });\r\n       }\r\n \r\n       // 检查同一资源下是否已存在相同代码的操作\r\n       const existingAction = await ResourceAction.findOne({\r\n         where: {\r\n           resourceId,\r\n-          code: actionData.code\r\n-        }\r\n+          code: actionData.code,\r\n+        },\r\n       });\r\n \r\n       if (existingAction) {\r\n         return res.status(400).json({\r\n           success: false,\r\n-          message: \"Action code already exists for this resource\"\r\n+          message: \"Action code already exists for this resource\",\r\n         });\r\n       }\r\n \r\n       // 创建操作\r\n       const action = await ResourceAction.create({\r\n         ...actionData,\r\n-        resourceId\r\n+        resourceId,\r\n       });\r\n \r\n       // 自动创建对应的权限\r\n       const permission = await Permission.create({\r\n         name: `${action.code}_${resource.code}`,\r\n         code: `${action.code}_${resource.code}`,\r\n         description: action.description,\r\n         actionId: action.id,\r\n-        resourceId\r\n+        resourceId,\r\n       });\r\n \r\n       res.status(201).json({\r\n         success: true,\r\n         data: {\r\n           ...action.toJSON(),\r\n-          permission: permission.toJSON()\r\n-        }\r\n+          permission: permission.toJSON(),\r\n+        },\r\n       });\r\n     } catch (error) {\r\n       res.status(400).json({\r\n         success: false,\r\n-        message: error.message\r\n+        message: error.message,\r\n       });\r\n     }\r\n   },\r\n \r\n@@ -71,28 +71,28 @@\n         where,\r\n         include: [\r\n           {\r\n             model: Resource,\r\n-            as: 'resource',\r\n-            attributes: ['id', 'name', 'code']\r\n+            as: \"resource\",\r\n+            attributes: [\"id\", \"name\", \"code\"],\r\n           },\r\n           {\r\n             model: Permission,\r\n-            as: 'permission',\r\n-            attributes: ['id', 'name', 'code']\r\n-          }\r\n+            as: \"permission\",\r\n+            attributes: [\"id\", \"name\", \"code\"],\r\n+          },\r\n         ],\r\n-        order: [['sort', 'ASC']]\r\n+        order: [[\"sort\", \"ASC\"]],\r\n       });\r\n \r\n       res.json({\r\n         success: true,\r\n-        data: actions\r\n+        data: actions,\r\n       });\r\n     } catch (error) {\r\n       res.status(400).json({\r\n         success: false,\r\n-        message: error.message\r\n+        message: error.message,\r\n       });\r\n     }\r\n   },\r\n \r\n@@ -102,34 +102,34 @@\n       const action = await ResourceAction.findByPk(req.params.id, {\r\n         include: [\r\n           {\r\n             model: Resource,\r\n-            as: 'resource',\r\n-            attributes: ['id', 'name', 'code']\r\n+            as: \"resource\",\r\n+            attributes: [\"id\", \"name\", \"code\"],\r\n           },\r\n           {\r\n             model: Permission,\r\n-            as: 'permission',\r\n-            attributes: ['id', 'name', 'code']\r\n-          }\r\n-        ]\r\n+            as: \"permission\",\r\n+            attributes: [\"id\", \"name\", \"code\"],\r\n+          },\r\n+        ],\r\n       });\r\n \r\n       if (!action) {\r\n         return res.status(404).json({\r\n           success: false,\r\n-          message: \"Resource action not found\"\r\n+          message: \"Resource action not found\",\r\n         });\r\n       }\r\n \r\n       res.json({\r\n         success: true,\r\n-        data: action\r\n+        data: action,\r\n       });\r\n     } catch (error) {\r\n       res.status(400).json({\r\n         success: false,\r\n-        message: error.message\r\n+        message: error.message,\r\n       });\r\n     }\r\n   },\r\n \r\n@@ -142,56 +142,56 @@\n       const action = await ResourceAction.findByPk(id, {\r\n         include: [\r\n           {\r\n             model: Permission,\r\n-            as: 'permission'\r\n-          }\r\n-        ]\r\n+            as: \"permission\",\r\n+          },\r\n+        ],\r\n       });\r\n \r\n       if (!action) {\r\n         return res.status(404).json({\r\n           success: false,\r\n-          message: \"Resource action not found\"\r\n+          message: \"Resource action not found\",\r\n         });\r\n       }\r\n \r\n       // 如果更改了代码，需要检查是否重复\r\n       if (updateData.code && updateData.code !== action.code) {\r\n         const existingAction = await ResourceAction.findOne({\r\n           where: {\r\n             resourceId: action.resourceId,\r\n-            code: updateData.code\r\n-          }\r\n+            code: updateData.code,\r\n+          },\r\n         });\r\n \r\n         if (existingAction) {\r\n           return res.status(400).json({\r\n             success: false,\r\n-            message: \"Action code already exists for this resource\"\r\n+            message: \"Action code already exists for this resource\",\r\n           });\r\n         }\r\n \r\n         // 更新对应的权限代码\r\n         if (action.permission) {\r\n           const resource = await Resource.findByPk(action.resourceId);\r\n           await action.permission.update({\r\n             name: `${updateData.code}_${resource.code}`,\r\n-            code: `${updateData.code}_${resource.code}`\r\n+            code: `${updateData.code}_${resource.code}`,\r\n           });\r\n         }\r\n       }\r\n \r\n       await action.update(updateData);\r\n \r\n       res.json({\r\n         success: true,\r\n-        data: action\r\n+        data: action,\r\n       });\r\n     } catch (error) {\r\n       res.status(400).json({\r\n         success: false,\r\n-        message: error.message\r\n+        message: error.message,\r\n       });\r\n     }\r\n   },\r\n \r\n@@ -201,17 +201,17 @@\n       const action = await ResourceAction.findByPk(req.params.id, {\r\n         include: [\r\n           {\r\n             model: Permission,\r\n-            as: 'permission'\r\n-          }\r\n-        ]\r\n+            as: \"permission\",\r\n+          },\r\n+        ],\r\n       });\r\n \r\n       if (!action) {\r\n         return res.status(404).json({\r\n           success: false,\r\n-          message: \"Resource action not found\"\r\n+          message: \"Resource action not found\",\r\n         });\r\n       }\r\n \r\n       // 删除关联的权限\r\n@@ -222,16 +222,16 @@\n       await action.destroy();\r\n \r\n       res.json({\r\n         success: true,\r\n-        message: \"Resource action deleted successfully\"\r\n+        message: \"Resource action deleted successfully\",\r\n       });\r\n     } catch (error) {\r\n       res.status(400).json({\r\n         success: false,\r\n-        message: error.message\r\n+        message: error.message,\r\n       });\r\n     }\r\n-  }\r\n+  },\r\n };\r\n \r\n module.exports = resourceActionController;\r\n"
                },
                {
                    "date": 1746151698662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,14 @@\n const { ResourceAction, Resource, Permission } = require(\"../models\");\r\n const ResponseUtil = require(\"../utils/response\");\r\n+const { Op } = require(\"sequelize\");\r\n \r\n const resourceActionController = {\r\n   // 创建资源操作\r\n   async create(req, res) {\r\n     try {\r\n-      const { resourceId, ...actionData } = req.body;\r\n+      const { resourceId } = req.params;\r\n+      const actionData = req.body;\r\n \r\n       // 检查资源是否存在\r\n       const resource = await Resource.findByPk(resourceId);\r\n       if (!resource) {\r\n@@ -38,21 +40,33 @@\n       });\r\n \r\n       // 自动创建对应的权限\r\n       const permission = await Permission.create({\r\n-        name: `${action.code}_${resource.code}`,\r\n-        code: `${action.code}_${resource.code}`,\r\n+        name: `${resource.code}:${action.code}`,\r\n+        code: `${resource.code}:${action.code}`,\r\n         description: action.description,\r\n         actionId: action.id,\r\n         resourceId,\r\n       });\r\n \r\n+      const result = await ResourceAction.findByPk(action.id, {\r\n+        include: [\r\n+          {\r\n+            model: Resource,\r\n+            as: \"resource\",\r\n+            attributes: [\"id\", \"name\", \"code\"],\r\n+          },\r\n+          {\r\n+            model: Permission,\r\n+            as: \"permission\",\r\n+            attributes: [\"id\", \"name\", \"code\"],\r\n+          },\r\n+        ],\r\n+      });\r\n+\r\n       res.status(201).json({\r\n         success: true,\r\n-        data: {\r\n-          ...action.toJSON(),\r\n-          permission: permission.toJSON(),\r\n-        },\r\n+        data: result,\r\n       });\r\n     } catch (error) {\r\n       res.status(400).json({\r\n         success: false,\r\n@@ -63,13 +77,21 @@\n \r\n   // 获取资源操作列表\r\n   async list(req, res) {\r\n     try {\r\n-      const { resourceId } = req.query;\r\n-      const where = resourceId ? { resourceId } : {};\r\n+      const { resourceId } = req.params;\r\n \r\n+      // 检查资源是否存在\r\n+      const resource = await Resource.findByPk(resourceId);\r\n+      if (!resource) {\r\n+        return res.status(404).json({\r\n+          success: false,\r\n+          message: \"Resource not found\",\r\n+        });\r\n+      }\r\n+\r\n       const actions = await ResourceAction.findAll({\r\n-        where,\r\n+        where: { resourceId },\r\n         include: [\r\n           {\r\n             model: Resource,\r\n             as: \"resource\",\r\n@@ -98,9 +120,15 @@\n \r\n   // 获取单个资源操作\r\n   async getById(req, res) {\r\n     try {\r\n-      const action = await ResourceAction.findByPk(req.params.id, {\r\n+      const { resourceId, id } = req.params;\r\n+\r\n+      const action = await ResourceAction.findOne({\r\n+        where: {\r\n+          id,\r\n+          resourceId,\r\n+        },\r\n         include: [\r\n           {\r\n             model: Resource,\r\n             as: \"resource\",\r\n@@ -135,12 +163,16 @@\n \r\n   // 更新资源操作\r\n   async update(req, res) {\r\n     try {\r\n-      const { id } = req.params;\r\n-      const { resourceId, ...updateData } = req.body;\r\n+      const { resourceId, id } = req.params;\r\n+      const updateData = req.body;\r\n \r\n-      const action = await ResourceAction.findByPk(id, {\r\n+      const action = await ResourceAction.findOne({\r\n+        where: {\r\n+          id,\r\n+          resourceId,\r\n+        },\r\n         include: [\r\n           {\r\n             model: Permission,\r\n             as: \"permission\",\r\n@@ -158,10 +190,11 @@\n       // 如果更改了代码，需要检查是否重复\r\n       if (updateData.code && updateData.code !== action.code) {\r\n         const existingAction = await ResourceAction.findOne({\r\n           where: {\r\n-            resourceId: action.resourceId,\r\n+            resourceId,\r\n             code: updateData.code,\r\n+            id: { [Op.ne]: id },\r\n           },\r\n         });\r\n \r\n         if (existingAction) {\r\n@@ -172,21 +205,37 @@\n         }\r\n \r\n         // 更新对应的权限代码\r\n         if (action.permission) {\r\n-          const resource = await Resource.findByPk(action.resourceId);\r\n+          const resource = await Resource.findByPk(resourceId);\r\n           await action.permission.update({\r\n-            name: `${updateData.code}_${resource.code}`,\r\n-            code: `${updateData.code}_${resource.code}`,\r\n+            name: `${resource.code}:${updateData.code}`,\r\n+            code: `${resource.code}:${updateData.code}`,\r\n+            description: updateData.description || action.description,\r\n           });\r\n         }\r\n       }\r\n \r\n       await action.update(updateData);\r\n \r\n+      const result = await ResourceAction.findByPk(id, {\r\n+        include: [\r\n+          {\r\n+            model: Resource,\r\n+            as: \"resource\",\r\n+            attributes: [\"id\", \"name\", \"code\"],\r\n+          },\r\n+          {\r\n+            model: Permission,\r\n+            as: \"permission\",\r\n+            attributes: [\"id\", \"name\", \"code\"],\r\n+          },\r\n+        ],\r\n+      });\r\n+\r\n       res.json({\r\n         success: true,\r\n-        data: action,\r\n+        data: result,\r\n       });\r\n     } catch (error) {\r\n       res.status(400).json({\r\n         success: false,\r\n@@ -197,9 +246,15 @@\n \r\n   // 删除资源操作\r\n   async delete(req, res) {\r\n     try {\r\n-      const action = await ResourceAction.findByPk(req.params.id, {\r\n+      const { resourceId, id } = req.params;\r\n+\r\n+      const action = await ResourceAction.findOne({\r\n+        where: {\r\n+          id,\r\n+          resourceId,\r\n+        },\r\n         include: [\r\n           {\r\n             model: Permission,\r\n             as: \"permission\",\r\n"
                },
                {
                    "date": 1746153356402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,9 @@\n \r\n       // 检查资源是否存在\r\n       const resource = await Resource.findByPk(resourceId);\r\n       if (!resource) {\r\n-        return res.status(404).json({\r\n-          success: false,\r\n-          message: \"Resource not found\",\r\n-        });\r\n+        return res.status(404).json(ResponseUtil.error(\"资源不存在\", 404));\r\n       }\r\n \r\n       // 检查同一资源下是否已存在相同代码的操作\r\n       const existingAction = await ResourceAction.findOne({\r\n@@ -26,12 +23,9 @@\n         },\r\n       });\r\n \r\n       if (existingAction) {\r\n-        return res.status(400).json({\r\n-          success: false,\r\n-          message: \"Action code already exists for this resource\",\r\n-        });\r\n+        return res.status(400).json(ResponseUtil.error(\"该资源下已存在相同代码的操作\", 400));\r\n       }\r\n \r\n       // 创建操作\r\n       const action = await ResourceAction.create({\r\n@@ -62,17 +56,11 @@\n           },\r\n         ],\r\n       });\r\n \r\n-      res.status(201).json({\r\n-        success: true,\r\n-        data: result,\r\n-      });\r\n+      res.status(201).json(ResponseUtil.success(result, \"资源操作创建成功\"));\r\n     } catch (error) {\r\n-      res.status(400).json({\r\n-        success: false,\r\n-        message: error.message,\r\n-      });\r\n+      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n     }\r\n   },\r\n \r\n   // 获取资源操作列表\r\n@@ -82,12 +70,9 @@\n \r\n       // 检查资源是否存在\r\n       const resource = await Resource.findByPk(resourceId);\r\n       if (!resource) {\r\n-        return res.status(404).json({\r\n-          success: false,\r\n-          message: \"Resource not found\",\r\n-        });\r\n+        return res.status(404).json(ResponseUtil.error(\"资源不存在\", 404));\r\n       }\r\n \r\n       const actions = await ResourceAction.findAll({\r\n         where: { resourceId },\r\n@@ -105,17 +90,11 @@\n         ],\r\n         order: [[\"sort\", \"ASC\"]],\r\n       });\r\n \r\n-      res.json({\r\n-        success: true,\r\n-        data: actions,\r\n-      });\r\n+      res.json(ResponseUtil.success(actions, \"资源操作列表获取成功\"));\r\n     } catch (error) {\r\n-      res.status(400).json({\r\n-        success: false,\r\n-        message: error.message,\r\n-      });\r\n+      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n     }\r\n   },\r\n \r\n   // 获取单个资源操作\r\n@@ -142,23 +121,14 @@\n         ],\r\n       });\r\n \r\n       if (!action) {\r\n-        return res.status(404).json({\r\n-          success: false,\r\n-          message: \"Resource action not found\",\r\n-        });\r\n+        return res.status(404).json(ResponseUtil.error(\"资源操作不存在\", 404));\r\n       }\r\n \r\n-      res.json({\r\n-        success: true,\r\n-        data: action,\r\n-      });\r\n+      res.json(ResponseUtil.success(action, \"资源操作获取成功\"));\r\n     } catch (error) {\r\n-      res.status(400).json({\r\n-        success: false,\r\n-        message: error.message,\r\n-      });\r\n+      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n     }\r\n   },\r\n \r\n   // 更新资源操作\r\n@@ -180,12 +150,9 @@\n         ],\r\n       });\r\n \r\n       if (!action) {\r\n-        return res.status(404).json({\r\n-          success: false,\r\n-          message: \"Resource action not found\",\r\n-        });\r\n+        return res.status(404).json(ResponseUtil.error(\"资源操作不存在\", 404));\r\n       }\r\n \r\n       // 如果更改了代码，需要检查是否重复\r\n       if (updateData.code && updateData.code !== action.code) {\r\n@@ -197,12 +164,9 @@\n           },\r\n         });\r\n \r\n         if (existingAction) {\r\n-          return res.status(400).json({\r\n-            success: false,\r\n-            message: \"Action code already exists for this resource\",\r\n-          });\r\n+          return res.status(400).json(ResponseUtil.error(\"该资源下已存在相同代码的操作\", 400));\r\n         }\r\n \r\n         // 更新对应的权限代码\r\n         if (action.permission) {\r\n@@ -231,17 +195,11 @@\n           },\r\n         ],\r\n       });\r\n \r\n-      res.json({\r\n-        success: true,\r\n-        data: result,\r\n-      });\r\n+      res.json(ResponseUtil.success(result, \"资源操作更新成功\"));\r\n     } catch (error) {\r\n-      res.status(400).json({\r\n-        success: false,\r\n-        message: error.message,\r\n-      });\r\n+      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n     }\r\n   },\r\n \r\n   // 删除资源操作\r\n@@ -262,12 +220,9 @@\n         ],\r\n       });\r\n \r\n       if (!action) {\r\n-        return res.status(404).json({\r\n-          success: false,\r\n-          message: \"Resource action not found\",\r\n-        });\r\n+        return res.status(404).json(ResponseUtil.error(\"资源操作不存在\", 404));\r\n       }\r\n \r\n       // 删除关联的权限\r\n       if (action.permission) {\r\n@@ -275,17 +230,11 @@\n       }\r\n \r\n       await action.destroy();\r\n \r\n-      res.json({\r\n-        success: true,\r\n-        message: \"Resource action deleted successfully\",\r\n-      });\r\n+      res.json(ResponseUtil.success(null, \"资源操作删除成功\"));\r\n     } catch (error) {\r\n-      res.status(400).json({\r\n-        success: false,\r\n-        message: error.message,\r\n-      });\r\n+      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n     }\r\n   },\r\n };\r\n \r\n"
                },
                {
                    "date": 1746153424650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,11 @@\n         },\r\n       });\r\n \r\n       if (existingAction) {\r\n-        return res.status(400).json(ResponseUtil.error(\"该资源下已存在相同代码的操作\", 400));\r\n+        return res\r\n+          .status(400)\r\n+          .json(ResponseUtil.error(\"该资源下已存在相同代码的操作\", 400));\r\n       }\r\n \r\n       // 创建操作\r\n       const action = await ResourceAction.create({\r\n@@ -164,9 +166,11 @@\n           },\r\n         });\r\n \r\n         if (existingAction) {\r\n-          return res.status(400).json(ResponseUtil.error(\"该资源下已存在相同代码的操作\", 400));\r\n+          return res\r\n+            .status(400)\r\n+            .json(ResponseUtil.error(\"该资源下已存在相同代码的操作\", 400));\r\n         }\r\n \r\n         // 更新对应的权限代码\r\n         if (action.permission) {\r\n"
                }
            ],
            "date": 1746022460215,
            "name": "Commit-0",
            "content": "const { ResourceAction } = require(\"../models\");\r\nconst ResponseUtil = require(\"../utils/response\");\r\n\r\nconst resourceActionController = {\r\n  // 创建资源操作\r\n  async create(req, res) {\r\n    try {\r\n      const action = await ResourceAction.create(req.body);\r\n      res.json(ResponseUtil.success(action, \"资源操作创建成功\"));\r\n    } catch (error) {\r\n      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n    }\r\n  },\r\n  // 获取资源操作列表\r\n  async list(req, res) {\r\n    try {\r\n      const actions = await ResourceAction.findAll();\r\n      res.json(ResponseUtil.success(actions, \"资源操作列表获取成功\"));\r\n    } catch (error) {\r\n      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n    }\r\n  },\r\n  // 获取单个资源操作\r\n  async getById(req, res) {\r\n    try {\r\n      const action = await ResourceAction.findByPk(req.params.id);\r\n      if (!action) {\r\n        return res.status(404).json(ResponseUtil.error(\"资源操作不存在\", 404));\r\n      }\r\n      res.json(ResponseUtil.success(action, \"资源操作获取成功\"));\r\n    } catch (error) {\r\n      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n    }\r\n  },\r\n  // 更新资源操作\r\n  async update(req, res) {\r\n    try {\r\n      const action = await ResourceAction.findByPk(req.params.id);\r\n      if (!action) {\r\n        return res.status(404).json(ResponseUtil.error(\"资源操作不存在\", 404));\r\n      }\r\n      await action.update(req.body);\r\n      res.json(ResponseUtil.success(action, \"资源操作更新成功\"));\r\n    } catch (error) {\r\n      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n    }\r\n  },\r\n  // 删除资源操作\r\n  async delete(req, res) {\r\n    try {\r\n      const action = await ResourceAction.findByPk(req.params.id);\r\n      if (!action) {\r\n        return res.status(404).json(ResponseUtil.error(\"资源操作不存在\", 404));\r\n      }\r\n      await action.destroy();\r\n      res.json(ResponseUtil.success(null, \"资源操作删除成功\"));\r\n    } catch (error) {\r\n      res.status(500).json(ResponseUtil.error(error.message, 500));\r\n    }\r\n  },\r\n};\r\n\r\nmodule.exports = resourceActionController;"
        }
    ]
}