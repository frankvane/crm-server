{
    "sourceFile": "seeders/20240321000000-init-medical-categories.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746141437671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746141538545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,45 +4,40 @@\n   async up(queryInterface, Sequelize) {\r\n     // 1. Create category types\r\n     const categoryTypes = [\r\n       {\r\n-        id: 1,\r\n         name: \"药品分类\",\r\n         code: \"MEDICINE_TYPE\",\r\n         description: \"药品的基本分类，包括处方药、非处方药等\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n       {\r\n-        id: 2,\r\n         name: \"适应症分类\",\r\n         code: \"INDICATION_TYPE\",\r\n         description: \"药品适应症分类，包括各类疾病领域\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n       {\r\n-        id: 3,\r\n         name: \"剂型分类\",\r\n         code: \"DOSAGE_FORM_TYPE\",\r\n         description: \"药品剂型分类，包括片剂、胶囊剂等\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n       {\r\n-        id: 4,\r\n         name: \"使用方式\",\r\n         code: \"USAGE_TYPE\",\r\n         description: \"药品使用方式分类，包括口服、注射等\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n       {\r\n-        id: 5,\r\n         name: \"储存条件\",\r\n         code: \"STORAGE_TYPE\",\r\n         description: \"药品储存条件分类，包括常温、冷藏等\",\r\n         status: 1,\r\n@@ -50,250 +45,281 @@\n         updatedAt: new Date(),\r\n       },\r\n     ];\r\n \r\n+    // 插入分类类型并获取插入后的数据\r\n     await queryInterface.bulkInsert(\"CategoryTypes\", categoryTypes, {});\r\n \r\n+    // 查询插入的分类类型以获取它们的ID\r\n+    const insertedTypes = await queryInterface.sequelize.query(\r\n+      `SELECT id, code FROM CategoryTypes WHERE code IN ('MEDICINE_TYPE', 'INDICATION_TYPE', 'DOSAGE_FORM_TYPE', 'USAGE_TYPE', 'STORAGE_TYPE')`,\r\n+      { type: queryInterface.sequelize.QueryTypes.SELECT }\r\n+    );\r\n+\r\n+    // 创建代码到ID的映射\r\n+    const typeCodeToId = {};\r\n+    insertedTypes.forEach((type) => {\r\n+      typeCodeToId[type.code] = type.id;\r\n+    });\r\n+\r\n     // 2. Create categories for each type\r\n     // 2.1 药品分类\r\n     const medicineCategories = [\r\n       {\r\n-        id: 1,\r\n         name: \"处方药\",\r\n         code: \"RX\",\r\n-        typeId: 1,\r\n+        typeId: typeCodeToId[\"MEDICINE_TYPE\"],\r\n         parentId: null,\r\n         sort: 1,\r\n         description: \"需要凭执业医师处方才可调配、购买和使用的药品\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n       {\r\n-        id: 2,\r\n         name: \"非处方药\",\r\n         code: \"OTC\",\r\n-        typeId: 1,\r\n+        typeId: typeCodeToId[\"MEDICINE_TYPE\"],\r\n         parentId: null,\r\n         sort: 2,\r\n         description: \"消费者可不经医生处方，直接从药房或药店购买的药品\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n-      // 处方药子分类\r\n+    ];\r\n+\r\n+    // 插入主要分类并获取ID\r\n+    await queryInterface.bulkInsert(\"Categories\", medicineCategories, {});\r\n+\r\n+    // 查询插入的主分类以获取它们的ID\r\n+    const insertedMainCategories = await queryInterface.sequelize.query(\r\n+      `SELECT id, code FROM Categories WHERE code IN ('RX', 'OTC')`,\r\n+      { type: queryInterface.sequelize.QueryTypes.SELECT }\r\n+    );\r\n+\r\n+    // 创建代码到ID的映射\r\n+    const categoryCodeToId = {};\r\n+    insertedMainCategories.forEach((category) => {\r\n+      categoryCodeToId[category.code] = category.id;\r\n+    });\r\n+\r\n+    // 处方药子分类\r\n+    const medicineSubCategories = [\r\n       {\r\n-        id: 3,\r\n         name: \"抗生素类\",\r\n         code: \"RX_ANTIBIOTIC\",\r\n-        typeId: 1,\r\n-        parentId: 1,\r\n+        typeId: typeCodeToId[\"MEDICINE_TYPE\"],\r\n+        parentId: categoryCodeToId[\"RX\"],\r\n         sort: 1,\r\n         description: \"用于治疗细菌感染的药物\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n       {\r\n-        id: 4,\r\n         name: \"心血管用药\",\r\n         code: \"RX_CARDIOVASCULAR\",\r\n-        typeId: 1,\r\n-        parentId: 1,\r\n+        typeId: typeCodeToId[\"MEDICINE_TYPE\"],\r\n+        parentId: categoryCodeToId[\"RX\"],\r\n         sort: 2,\r\n         description: \"用于治疗心血管系统疾病的药物\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n       // OTC子分类\r\n       {\r\n-        id: 5,\r\n         name: \"感冒用药\",\r\n         code: \"OTC_COLD\",\r\n-        typeId: 1,\r\n-        parentId: 2,\r\n+        typeId: typeCodeToId[\"MEDICINE_TYPE\"],\r\n+        parentId: categoryCodeToId[\"OTC\"],\r\n         sort: 1,\r\n         description: \"用于治疗感冒症状的非处方药\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n     ];\r\n \r\n+    await queryInterface.bulkInsert(\"Categories\", medicineSubCategories, {});\r\n+\r\n     // 2.2 适应症分类\r\n     const indicationCategories = [\r\n       {\r\n-        id: 101,\r\n         name: \"心血管系统\",\r\n         code: \"CARDIOVASCULAR\",\r\n-        typeId: 2,\r\n+        typeId: typeCodeToId[\"INDICATION_TYPE\"],\r\n         parentId: null,\r\n         sort: 1,\r\n         description: \"与心脏和血管相关的疾病\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n       {\r\n-        id: 102,\r\n         name: \"消化系统\",\r\n         code: \"DIGESTIVE\",\r\n-        typeId: 2,\r\n+        typeId: typeCodeToId[\"INDICATION_TYPE\"],\r\n         parentId: null,\r\n         sort: 2,\r\n         description: \"与消化道相关的疾病\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n-      // 心血管系统子分类\r\n+    ];\r\n+\r\n+    // 插入适应症主分类\r\n+    await queryInterface.bulkInsert(\"Categories\", indicationCategories, {});\r\n+\r\n+    // 查询插入的适应症主分类以获取它们的ID\r\n+    const insertedIndications = await queryInterface.sequelize.query(\r\n+      `SELECT id, code FROM Categories WHERE code IN ('CARDIOVASCULAR', 'DIGESTIVE')`,\r\n+      { type: queryInterface.sequelize.QueryTypes.SELECT }\r\n+    );\r\n+\r\n+    // 更新分类代码到ID的映射\r\n+    insertedIndications.forEach((category) => {\r\n+      categoryCodeToId[category.code] = category.id;\r\n+    });\r\n+\r\n+    // 适应症子分类\r\n+    const indicationSubCategories = [\r\n       {\r\n-        id: 103,\r\n         name: \"高血压\",\r\n         code: \"HYPERTENSION\",\r\n-        typeId: 2,\r\n-        parentId: 101,\r\n+        typeId: typeCodeToId[\"INDICATION_TYPE\"],\r\n+        parentId: categoryCodeToId[\"CARDIOVASCULAR\"],\r\n         sort: 1,\r\n         description: \"血压持续升高的疾病\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n     ];\r\n \r\n+    await queryInterface.bulkInsert(\"Categories\", indicationSubCategories, {});\r\n+\r\n     // 2.3 剂型分类\r\n     const dosageFormCategories = [\r\n       {\r\n-        id: 201,\r\n         name: \"口服固体制剂\",\r\n         code: \"ORAL_SOLID\",\r\n-        typeId: 3,\r\n+        typeId: typeCodeToId[\"DOSAGE_FORM_TYPE\"],\r\n         parentId: null,\r\n         sort: 1,\r\n         description: \"以口服方式使用的固体药物制剂\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n-      // 口服固体制剂子分类\r\n+    ];\r\n+\r\n+    // 插入剂型主分类\r\n+    await queryInterface.bulkInsert(\"Categories\", dosageFormCategories, {});\r\n+\r\n+    // 查询插入的剂型主分类以获取ID\r\n+    const insertedDosageForms = await queryInterface.sequelize.query(\r\n+      `SELECT id, code FROM Categories WHERE code = 'ORAL_SOLID'`,\r\n+      { type: queryInterface.sequelize.QueryTypes.SELECT }\r\n+    );\r\n+\r\n+    // 更新分类代码到ID的映射\r\n+    insertedDosageForms.forEach((category) => {\r\n+      categoryCodeToId[category.code] = category.id;\r\n+    });\r\n+\r\n+    // 剂型子分类\r\n+    const dosageFormSubCategories = [\r\n       {\r\n-        id: 202,\r\n         name: \"片剂\",\r\n         code: \"TABLET\",\r\n-        typeId: 3,\r\n-        parentId: 201,\r\n+        typeId: typeCodeToId[\"DOSAGE_FORM_TYPE\"],\r\n+        parentId: categoryCodeToId[\"ORAL_SOLID\"],\r\n         sort: 1,\r\n         description: \"药物与辅料混合压制成的片状制剂\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n       {\r\n-        id: 203,\r\n         name: \"胶囊剂\",\r\n         code: \"CAPSULE\",\r\n-        typeId: 3,\r\n-        parentId: 201,\r\n+        typeId: typeCodeToId[\"DOSAGE_FORM_TYPE\"],\r\n+        parentId: categoryCodeToId[\"ORAL_SOLID\"],\r\n         sort: 2,\r\n         description: \"将药物装入空心胶囊中的制剂\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n     ];\r\n \r\n+    await queryInterface.bulkInsert(\"Categories\", dosageFormSubCategories, {});\r\n+\r\n     // 2.4 使用方式\r\n     const usageCategories = [\r\n       {\r\n-        id: 301,\r\n         name: \"口服给药\",\r\n         code: \"ORAL\",\r\n-        typeId: 4,\r\n+        typeId: typeCodeToId[\"USAGE_TYPE\"],\r\n         parentId: null,\r\n         sort: 1,\r\n         description: \"通过口服方式服用的药物\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n+    ];\r\n+\r\n+    // 插入使用方式主分类\r\n+    await queryInterface.bulkInsert(\"Categories\", usageCategories, {});\r\n+\r\n+    // 查询插入的使用方式主分类以获取ID\r\n+    const insertedUsages = await queryInterface.sequelize.query(\r\n+      `SELECT id, code FROM Categories WHERE code = 'INJECTION'`,\r\n+      { type: queryInterface.sequelize.QueryTypes.SELECT }\r\n+    );\r\n+\r\n+    // 更新分类代码到ID的映射\r\n+    insertedUsages.forEach((category) => {\r\n+      categoryCodeToId[category.code] = category.id;\r\n+    });\r\n+\r\n+    // 使用方式子分类\r\n+    const usageSubCategories = [\r\n       {\r\n-        id: 302,\r\n-        name: \"注射给药\",\r\n-        code: \"INJECTION\",\r\n-        typeId: 4,\r\n-        parentId: null,\r\n-        sort: 2,\r\n-        description: \"通过注射方式使用的药物\",\r\n-        status: 1,\r\n-        createdAt: new Date(),\r\n-        updatedAt: new Date(),\r\n-      },\r\n-      // 注射给药子分类\r\n-      {\r\n-        id: 303,\r\n         name: \"静脉注射\",\r\n         code: \"INTRAVENOUS\",\r\n-        typeId: 4,\r\n-        parentId: 302,\r\n+        typeId: typeCodeToId[\"USAGE_TYPE\"],\r\n+        parentId: categoryCodeToId[\"INJECTION\"],\r\n         sort: 1,\r\n         description: \"通过静脉注射给药\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n     ];\r\n \r\n+    await queryInterface.bulkInsert(\"Categories\", usageSubCategories, {});\r\n+\r\n     // 2.5 储存条件\r\n     const storageCategories = [\r\n       {\r\n-        id: 401,\r\n         name: \"常温储存\",\r\n         code: \"ROOM_TEMP\",\r\n-        typeId: 5,\r\n+        typeId: typeCodeToId[\"STORAGE_TYPE\"],\r\n         parentId: null,\r\n         sort: 1,\r\n         description: \"在室温条件下储存的药品\",\r\n         status: 1,\r\n         createdAt: new Date(),\r\n         updatedAt: new Date(),\r\n       },\r\n-      {\r\n-        id: 402,\r\n-        name: \"冷藏储存\",\r\n-        code: \"REFRIGERATED\",\r\n-        typeId: 5,\r\n-        parentId: null,\r\n-        sort: 2,\r\n-        description: \"需要在2-8℃条件下储存的药品\",\r\n-        status: 1,\r\n-        createdAt: new Date(),\r\n-        updatedAt: new Date(),\r\n-      },\r\n-      {\r\n-        id: 403,\r\n-        name: \"避光储存\",\r\n-        code: \"LIGHT_PROTECTED\",\r\n-        typeId: 5,\r\n-        parentId: null,\r\n-        sort: 3,\r\n-        description: \"需要避免光照的药品\",\r\n-        status: 1,\r\n-        createdAt: new Date(),\r\n-        updatedAt: new Date(),\r\n-      },\r\n     ];\r\n \r\n-    // 合并所有分类数据\r\n-    const allCategories = [\r\n-      ...medicineCategories,\r\n-      ...indicationCategories,\r\n-      ...dosageFormCategories,\r\n-      ...usageCategories,\r\n-      ...storageCategories,\r\n-    ];\r\n-\r\n-    await queryInterface.bulkInsert(\"Categories\", allCategories, {});\r\n+    await queryInterface.bulkInsert(\"Categories\", storageCategories, {});\r\n   },\r\n \r\n   async down(queryInterface, Sequelize) {\r\n     // 删除所有分类数据\r\n"
                }
            ],
            "date": 1746141437671,
            "name": "Commit-0",
            "content": "'use strict';\r\n\r\nmodule.exports = {\r\n  async up (queryInterface, Sequelize) {\r\n    // 1. Create category types\r\n    const categoryTypes = [\r\n      {\r\n        id: 1,\r\n        name: '药品分类',\r\n        code: 'MEDICINE_TYPE',\r\n        description: '药品的基本分类，包括处方药、非处方药等',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '适应症分类',\r\n        code: 'INDICATION_TYPE',\r\n        description: '药品适应症分类，包括各类疾病领域',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 3,\r\n        name: '剂型分类',\r\n        code: 'DOSAGE_FORM_TYPE',\r\n        description: '药品剂型分类，包括片剂、胶囊剂等',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 4,\r\n        name: '使用方式',\r\n        code: 'USAGE_TYPE',\r\n        description: '药品使用方式分类，包括口服、注射等',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 5,\r\n        name: '储存条件',\r\n        code: 'STORAGE_TYPE',\r\n        description: '药品储存条件分类，包括常温、冷藏等',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      }\r\n    ];\r\n\r\n    await queryInterface.bulkInsert('CategoryTypes', categoryTypes, {});\r\n\r\n    // 2. Create categories for each type\r\n    // 2.1 药品分类\r\n    const medicineCategories = [\r\n      {\r\n        id: 1,\r\n        name: '处方药',\r\n        code: 'RX',\r\n        typeId: 1,\r\n        parentId: null,\r\n        sort: 1,\r\n        description: '需要凭执业医师处方才可调配、购买和使用的药品',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '非处方药',\r\n        code: 'OTC',\r\n        typeId: 1,\r\n        parentId: null,\r\n        sort: 2,\r\n        description: '消费者可不经医生处方，直接从药房或药店购买的药品',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      // 处方药子分类\r\n      {\r\n        id: 3,\r\n        name: '抗生素类',\r\n        code: 'RX_ANTIBIOTIC',\r\n        typeId: 1,\r\n        parentId: 1,\r\n        sort: 1,\r\n        description: '用于治疗细菌感染的药物',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 4,\r\n        name: '心血管用药',\r\n        code: 'RX_CARDIOVASCULAR',\r\n        typeId: 1,\r\n        parentId: 1,\r\n        sort: 2,\r\n        description: '用于治疗心血管系统疾病的药物',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      // OTC子分类\r\n      {\r\n        id: 5,\r\n        name: '感冒用药',\r\n        code: 'OTC_COLD',\r\n        typeId: 1,\r\n        parentId: 2,\r\n        sort: 1,\r\n        description: '用于治疗感冒症状的非处方药',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      }\r\n    ];\r\n\r\n    // 2.2 适应症分类\r\n    const indicationCategories = [\r\n      {\r\n        id: 101,\r\n        name: '心血管系统',\r\n        code: 'CARDIOVASCULAR',\r\n        typeId: 2,\r\n        parentId: null,\r\n        sort: 1,\r\n        description: '与心脏和血管相关的疾病',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 102,\r\n        name: '消化系统',\r\n        code: 'DIGESTIVE',\r\n        typeId: 2,\r\n        parentId: null,\r\n        sort: 2,\r\n        description: '与消化道相关的疾病',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      // 心血管系统子分类\r\n      {\r\n        id: 103,\r\n        name: '高血压',\r\n        code: 'HYPERTENSION',\r\n        typeId: 2,\r\n        parentId: 101,\r\n        sort: 1,\r\n        description: '血压持续升高的疾病',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      }\r\n    ];\r\n\r\n    // 2.3 剂型分类\r\n    const dosageFormCategories = [\r\n      {\r\n        id: 201,\r\n        name: '口服固体制剂',\r\n        code: 'ORAL_SOLID',\r\n        typeId: 3,\r\n        parentId: null,\r\n        sort: 1,\r\n        description: '以口服方式使用的固体药物制剂',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      // 口服固体制剂子分类\r\n      {\r\n        id: 202,\r\n        name: '片剂',\r\n        code: 'TABLET',\r\n        typeId: 3,\r\n        parentId: 201,\r\n        sort: 1,\r\n        description: '药物与辅料混合压制成的片状制剂',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 203,\r\n        name: '胶囊剂',\r\n        code: 'CAPSULE',\r\n        typeId: 3,\r\n        parentId: 201,\r\n        sort: 2,\r\n        description: '将药物装入空心胶囊中的制剂',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      }\r\n    ];\r\n\r\n    // 2.4 使用方式\r\n    const usageCategories = [\r\n      {\r\n        id: 301,\r\n        name: '口服给药',\r\n        code: 'ORAL',\r\n        typeId: 4,\r\n        parentId: null,\r\n        sort: 1,\r\n        description: '通过口服方式服用的药物',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 302,\r\n        name: '注射给药',\r\n        code: 'INJECTION',\r\n        typeId: 4,\r\n        parentId: null,\r\n        sort: 2,\r\n        description: '通过注射方式使用的药物',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      // 注射给药子分类\r\n      {\r\n        id: 303,\r\n        name: '静脉注射',\r\n        code: 'INTRAVENOUS',\r\n        typeId: 4,\r\n        parentId: 302,\r\n        sort: 1,\r\n        description: '通过静脉注射给药',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      }\r\n    ];\r\n\r\n    // 2.5 储存条件\r\n    const storageCategories = [\r\n      {\r\n        id: 401,\r\n        name: '常温储存',\r\n        code: 'ROOM_TEMP',\r\n        typeId: 5,\r\n        parentId: null,\r\n        sort: 1,\r\n        description: '在室温条件下储存的药品',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 402,\r\n        name: '冷藏储存',\r\n        code: 'REFRIGERATED',\r\n        typeId: 5,\r\n        parentId: null,\r\n        sort: 2,\r\n        description: '需要在2-8℃条件下储存的药品',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 403,\r\n        name: '避光储存',\r\n        code: 'LIGHT_PROTECTED',\r\n        typeId: 5,\r\n        parentId: null,\r\n        sort: 3,\r\n        description: '需要避免光照的药品',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      }\r\n    ];\r\n\r\n    // 合并所有分类数据\r\n    const allCategories = [\r\n      ...medicineCategories,\r\n      ...indicationCategories,\r\n      ...dosageFormCategories,\r\n      ...usageCategories,\r\n      ...storageCategories\r\n    ];\r\n\r\n    await queryInterface.bulkInsert('Categories', allCategories, {});\r\n  },\r\n\r\n  async down (queryInterface, Sequelize) {\r\n    // 删除所有分类数据\r\n    await queryInterface.bulkDelete('Categories', null, {});\r\n    // 删除所有分类类型\r\n    await queryInterface.bulkDelete('CategoryTypes', null, {});\r\n  }\r\n};"
        }
    ]
}